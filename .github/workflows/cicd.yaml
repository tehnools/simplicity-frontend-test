name: CI/CD

on:
  push:
    branches: [main]
    tags:
      - 'v*'
  pull_request:
    branches: [main]
env:
  name: PA_TOKEN
  value: ${{ secrets.PA_TOKEN }}
jobs:
  build:
    permissions:
      contents: read
      packages: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          registry-url: 'https://npm.pkg.github.com'
          scope: '@tehnools'
      - name: Setup PNPM
        uses: pnpm/action-setup@v4
      - name: Setup .npmrc
        run: |
          echo "@tehnools:registry=https://npm.pkg.github.com" >> .npmrc
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.PA_TOKEN }}" >> .npmrc
      - name: Install Dependencies
        run: pnpm install
      - name: Lint
        run: pnpm lint
      - name: Run Tests
        run: pnpm test
      - name: Build
        run: pnpm build
      - name: Update version from release tag
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')

        id: package-version
        run: |
          RELEASE_TAG=${GITHUB_REF#refs/tags/v}
          echo "Updating to version $RELEASE_TAG"
          pnpm version $RELEASE_TAG --no-git-tag-version
          echo "version=$RELEASE_TAG" >> $GITHUB_OUTPUT
      - name: Create Release Archive
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
        run: |
          tar -czf release.tar.gz dist/
      - name: Upload Release Asset
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.PA_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./release.tar.gz
          asset_name: release.tar.gz
          asset_content_type: application/gzip
